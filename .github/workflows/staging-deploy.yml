name: Deploy Staging Backend

on:
  push:
    branches:
      - 'feat/*'
  pull_request:
    branches:
      - main
      - develop
    types:
      - opened
      - synchronize
      - reopened

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # Specify the Python version you use

      - name: Install SAM CLI
        run: |
          pip install aws-sam-cli

      - name: Build SAM project
        run: |
          cd backend
          sam build

      - name: Package SAM template
        run: |
          cd backend
          sam package \
            --output-template-file packaged.yaml \
            --s3-bucket YOUR_SAM_DEPLOYMENT_BUCKET_NAME # Replace with your S3 bucket name

      - name: Get branch name slug
        id: get_branch_slug
        run: |
          # Get branch name, handle pull requests vs pushes
          BRANCH_NAME=$(echo "${{ github.head_ref || github.ref_name }}" | sed 's/[^a-zA-Z0-9]/-/g' | tr '[:upper:]' '[:lower:]')
          echo "BRANCH_SLUG=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Deploy SAM stack
        run: |
          cd backend
          sam deploy \
            --template-file packaged.yaml \
            --stack-name kids-rewards-staging-${{ steps.get_branch_slug.outputs.BRANCH_SLUG }} \
            --capabilities CAPABILITY_IAM CAPABILITY_AUTO_EXPAND \
            --parameter-overrides \
              StageName=${{ steps.get_branch_slug.outputs.BRANCH_SLUG }} \
              TableNamePrefix=staging-${{ steps.get_branch_slug.outputs.BRANCH_SLUG }}- \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset

      - name: Seed Staging DynamoDB
        run: |
          # Assuming your seed script is in the scripts directory at the project root
          python scripts/seed_dynamodb.py \
            --environment staging \
            --users-table staging-${{ steps.get_branch_slug.outputs.BRANCH_SLUG }}-my-table # Adjust table name if needed

      - name: Output Staging Endpoints (Placeholder)
        run: |
          echo "Amplify Preview URL: [Fetch from Amplify]"
          echo "Staging API Gateway Endpoint: [Fetch from SAM deployment output]"
          # You'll need to add steps here to fetch the actual URLs after deployment
          # and potentially update Amplify environment variables.